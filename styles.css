:root {
  /* Colors */
  --clr-cyan:  hsl(172, 67%, 45%);
  --clr-very-dark-cyan:  hsl(183, 100%, 15%);
  --clr-dark-cyan:  hsl(186, 14%, 43%);
  --clr-grey-cyan:  hsl(184, 14%, 56%);
  --clr-light-grey-cyan:   hsl(185, 41%, 84%);
  --clr-verylight-grey-cyan:   hsl(189, 41%, 97%);
  --clr-white:   hsl(0, 0%, 100%);

  /* Typography */
  --ff-primary: 'Space Mono', monospace;

  --fs-300: 0.875rem;
  --fs-400: 1rem;
  --fs-500: 1.25rem;
  --fs-600: 1.5rem;
  --fs-700: 2rem;

  --fw-400: 400;
  --fw-700: 700;

  /* Borders */
  --border-radius-sm: 5px;
  --border-radius-md: 10px;
  --border-radius-lg: 15px;

  /* Spacing */
  --padding-input: .25em 1.5em;
  --padding-section: 1.5rem;

}

*,
*::before,
*::after {
  box-sizing: border-box;
}

body,
h1,
h2,
h3,
h4,
p {
  margin: 0;
}

h1 {
  margin-block: 1.5em;
  letter-spacing: 10px;
  text-align: center;
}

body {
  background-color: var(--clr-light-grey-cyan);
  min-height: 100vh;
  text-rendering: optimizeSpeed;
  line-height: 1.5;
  font-family: var(--ff-primary);
}

img,
picture {
  max-width: 100%;
  display: block;
}

input,
button,
textarea,
select {
  font: inherit;
  color: inherit;
  border: none;
}

input {
  background-color: var(--clr-verylight-grey-cyan);
  text-align: right;
  padding: var(--padding-input);
  border-radius: var(--border-radius-sm);
}

input::placeholder {
  color: var(--clr-dark-cyan);
}

/* Utility Classes */
.text-dark-cyan {color: var(--clr-dark-cyan);}
.text-very-dark-cyan {color: var(--clr-very-dark-cyan);}
.text-cyan {color: var(--clr-cyan);}
.text-white {color: var(--clr-white);}

.bg-dark-cyan {background-color: var(--clr-dark-cyan);}
.bg-very-dark-cyan {background-color: var(--clr-very-dark-cyan);}
.bg-cyan {background-color: var(--clr-cyan);}
.bg-white {background-color: var(--clr-white);}

.fs-300 {font-size: var(--fs-300)}
.fs-400 {font-size: var(--fs-400)}
.fs-500 {font-size: var(--fs-500)}
.fs-600 {font-size: var(--fs-600)}
.fs-700 {font-size: var(--fs-700)}

.fw-400 {font-weight: var(--fw-400)}
.fw-700 {font-weight: var(--fw-700)}

.uppercase {
  text-transform: uppercase;
}

.container {
  --max-width: 750px;

  width: min(var(--max-width), 100%);
  margin-inline: auto;
}

.flex {
  --gap: 2rem;

  display: flex;
  gap: var(--gap);
}

.direction-column {
  flex-direction: column;
}

.justify-space-between {
  justify-content: space-between;
}



/* General Styling */
.button, 
.custom-button {
  padding: var(--padding-input);
  border-radius: var(--border-radius-sm);
}

.button[type="reset"] {
  width: 100%;
}

.button:focus, 
input:focus {
  outline: 2px solid var(--clr-dark-cyan);
}

.button-active {
  background-color: var(--clr-cyan);
  color: var(--clr-very-dark-cyan);
  font-weight: var(--fw-700);
}

.icon {
  background-size: 5pxrem;
  background-repeat: no-repeat;
  background-position: 20px center;
}

.dollar {
  background-image: url(./images/icon-dollar.svg);
}

.people {
  background-image: url(./images/icon-person.svg);
}

.form {
  container-type: inline-size;

  display: flex;
  flex-direction: column;
  gap: 1.5rem; 
  border-radius: var(--border-radius-lg);
  padding: var(--padding-section);
}

@media (min-width: 450px) {
  .form {
    flex-direction: row;
  }

  /* .form-inputs,
  .display {
    flex-basis: 50%;
  } */
}

@container (min-width: 450px) {
  .form {
    flex-direction: row;
  }
}

.form-inputs {
  display: flex;
  flex-direction: column;
  gap: 2rem;
}

.form-group {
  display: flex;
  flex-direction: column;
  gap: .75rem;
}

.display {
  border-radius: var(--border-radius-md);
  padding: var(--padding-section);
}




/* 
TODO:
- put buttons in grid
- get form and display in place for desktop
- add flex to amount display divs
*/
